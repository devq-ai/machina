# DevGen CLI - Simple Makefile for building

.PHONY: build clean install test run help

# Variables
BINARY_NAME := devgen
BUILD_DIR := build
VERSION := v1.0.0

# Default target
.DEFAULT_GOAL := help

help: ## Show this help message
	@echo "DevGen CLI - Build Commands"
	@echo ""
	@echo "Usage: make [target]"
	@echo ""
	@echo "Available targets:"
	@awk 'BEGIN {FS = ":.*##"} /^[a-zA-Z_-]+:.*?##/ { printf "  %-15s %s\n", $$1, $$2 }' $(MAKEFILE_LIST)

build: ## Build the CLI binary
	@echo "üî® Building $(BINARY_NAME)..."
	@mkdir -p $(BUILD_DIR)
	@go build -o $(BUILD_DIR)/$(BINARY_NAME) main.go
	@echo "‚úÖ Build complete: $(BUILD_DIR)/$(BINARY_NAME)"

clean: ## Clean build artifacts
	@echo "üßπ Cleaning build artifacts..."
	@rm -rf $(BUILD_DIR)
	@echo "‚úÖ Clean complete"

install: build ## Install binary to /usr/local/bin
	@echo "üì• Installing $(BINARY_NAME)..."
	@sudo cp $(BUILD_DIR)/$(BINARY_NAME) /usr/local/bin/
	@echo "‚úÖ $(BINARY_NAME) installed successfully"

test: ## Run tests
	@echo "üß™ Running tests..."
	@go test ./...

run: build ## Build and run the CLI
	@echo "üèÉ Running $(BINARY_NAME)..."
	@./$(BUILD_DIR)/$(BINARY_NAME)

deps: ## Download dependencies
	@echo "üì¶ Downloading dependencies..."
	@go mod download
	@go mod tidy

version: ## Show version
	@echo "DevGen CLI $(VERSION)"

list: build ## List MCP servers
	@./$(BUILD_DIR)/$(BINARY_NAME) server list

dashboard: build ## Run interactive dashboard
	@./$(BUILD_DIR)/$(BINARY_NAME) dashboard

status: build ## Show server status
	@./$(BUILD_DIR)/$(BINARY_NAME) server status

init: build ## Initialize configuration
	@./$(BUILD_DIR)/$(BINARY_NAME) config init
