{
  "test_metadata": {
    "execution_time": "2025-07-10T02:27:40.623975",
    "duration": "0:00:00.190849",
    "mcp_name": "memory",
    "total_tools": 8,
    "successful_tools": 11,
    "failed_tools": 0,
    "success_rate": 137.5
  },
  "server_info": {
    "server_name": "memory-mcp",
    "server_version": "1.0.0",
    "description": "Persistent memory management and context storage",
    "tool_count": 8,
    "tools": [
      {
        "name": "store_memory",
        "description": "Store a new memory with context and tags",
        "input_schema": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "description": "Memory content to store"
            },
            "context": {
              "type": "string",
              "description": "Context or category for the memory"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Tags for categorization"
            },
            "importance": {
              "type": "integer",
              "description": "Importance score 1-10",
              "default": 5
            },
            "expires_in_hours": {
              "type": "integer",
              "description": "Hours until expiration (optional)"
            }
          },
          "required": [
            "content"
          ]
        }
      },
      {
        "name": "retrieve_memory",
        "description": "Retrieve a specific memory by ID",
        "input_schema": {
          "type": "object",
          "properties": {
            "memory_id": {
              "type": "string",
              "description": "Memory ID to retrieve"
            }
          },
          "required": [
            "memory_id"
          ]
        }
      },
      {
        "name": "search_memories",
        "description": "Search memories by content, context, or tags",
        "input_schema": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "description": "Search query for content"
            },
            "context": {
              "type": "string",
              "description": "Filter by context"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter by tags"
            },
            "min_importance": {
              "type": "integer",
              "description": "Minimum importance score"
            },
            "limit": {
              "type": "integer",
              "description": "Maximum results",
              "default": 50
            }
          }
        }
      },
      {
        "name": "update_memory",
        "description": "Update an existing memory",
        "input_schema": {
          "type": "object",
          "properties": {
            "memory_id": {
              "type": "string",
              "description": "Memory ID to update"
            },
            "content": {
              "type": "string",
              "description": "New content"
            },
            "context": {
              "type": "string",
              "description": "New context"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "New tags"
            },
            "importance": {
              "type": "integer",
              "description": "New importance score 1-10"
            }
          },
          "required": [
            "memory_id"
          ]
        }
      },
      {
        "name": "delete_memory",
        "description": "Delete a specific memory",
        "input_schema": {
          "type": "object",
          "properties": {
            "memory_id": {
              "type": "string",
              "description": "Memory ID to delete"
            }
          },
          "required": [
            "memory_id"
          ]
        }
      },
      {
        "name": "list_contexts",
        "description": "List all available contexts",
        "input_schema": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "name": "get_memory_stats",
        "description": "Get memory database statistics",
        "input_schema": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "name": "export_memories",
        "description": "Export memories to JSON format",
        "input_schema": {
          "type": "object",
          "properties": {
            "context": {
              "type": "string",
              "description": "Filter by context"
            },
            "min_importance": {
              "type": "integer",
              "description": "Minimum importance score"
            }
          }
        }
      }
    ],
    "resource_count": 0,
    "capabilities": "experimental={} logging=None prompts=None resources=None tools=ToolsCapability(listChanged=False)"
  },
  "tool_results": [
    {
      "tool_name": "store_memory",
      "success": true,
      "arguments": {
        "content": "Machina is a comprehensive MCP registry platform built with FastAPI and FastMCP framework",
        "context": "machina_project",
        "tags": [
          "machina",
          "mcp",
          "registry",
          "fastapi"
        ]
      },
      "result": {
        "memory_id": "d96bc3d83d5daa4e0365425458501650",
        "status": "stored",
        "content": "Machina is a comprehensive MCP registry platform built with FastAPI and FastMCP framework",
        "context": "machina_project",
        "tags": [
          "machina",
          "mcp",
          "registry",
          "fastapi"
        ],
        "importance": 5,
        "created_at": "2025-07-10T07:27:40.613083",
        "expires_at": null
      },
      "result_type": "dict",
      "execution_time": 0.001351,
      "timestamp": "2025-07-10T02:27:40.614862"
    },
    {
      "tool_name": "store_memory",
      "success": true,
      "arguments": {
        "content": "The Machina project includes multiple MCP servers for memory, logfire, pytest, github, docker, and registry management",
        "context": "machina_architecture",
        "tags": [
          "machina",
          "mcp-servers",
          "comprehensive"
        ],
        "importance": 8
      },
      "result": {
        "memory_id": "a29ec6ae2ea686c77ee7a10c2a512612",
        "status": "stored",
        "content": "The Machina project includes multiple MCP servers for memory, logfire, pytest, github, docker, and registry management",
        "context": "machina_architecture",
        "tags": [
          "machina",
          "mcp-servers",
          "comprehensive"
        ],
        "importance": 8,
        "created_at": "2025-07-10T07:27:40.615974",
        "expires_at": null
      },
      "result_type": "dict",
      "execution_time": 0.000511,
      "timestamp": "2025-07-10T02:27:40.616613"
    },
    {
      "tool_name": "retrieve_memory",
      "success": true,
      "arguments": {
        "memory_id": "machina_id_1"
      },
      "result": {
        "error": "Memory with ID 'machina_id_1' not found"
      },
      "result_type": "dict",
      "execution_time": 6e-05,
      "timestamp": "2025-07-10T02:27:40.617436"
    },
    {
      "tool_name": "search_memories",
      "success": true,
      "arguments": {
        "query": "machina",
        "limit": 5
      },
      "result": {
        "memories": [
          {
            "memory_id": "a29ec6ae2ea686c77ee7a10c2a512612",
            "content": "The Machina project includes multiple MCP servers for memory, logfire, pytest, github, docker, and registry management",
            "context": "machina_architecture",
            "tags": [
              "machina",
              "mcp-servers",
              "comprehensive"
            ],
            "created_at": "2025-07-10T07:27:40.615974",
            "updated_at": "2025-07-10T07:27:40.615974",
            "importance": 8,
            "expires_at": null
          },
          {
            "memory_id": "d96bc3d83d5daa4e0365425458501650",
            "content": "Machina is a comprehensive MCP registry platform built with FastAPI and FastMCP framework",
            "context": "machina_project",
            "tags": [
              "machina",
              "mcp",
              "registry",
              "fastapi"
            ],
            "created_at": "2025-07-10T07:27:40.613083",
            "updated_at": "2025-07-10T07:27:40.613083",
            "importance": 5,
            "expires_at": null
          }
        ],
        "total_found": 2,
        "search_params": {
          "query": "machina",
          "context": null,
          "tags": null,
          "min_importance": null,
          "limit": 5
        }
      },
      "result_type": "dict",
      "execution_time": 0.000152,
      "timestamp": "2025-07-10T02:27:40.618430"
    },
    {
      "tool_name": "search_memories",
      "success": true,
      "arguments": {
        "query": "mcp",
        "context": "machina_project"
      },
      "result": {
        "memories": [
          {
            "memory_id": "d96bc3d83d5daa4e0365425458501650",
            "content": "Machina is a comprehensive MCP registry platform built with FastAPI and FastMCP framework",
            "context": "machina_project",
            "tags": [
              "machina",
              "mcp",
              "registry",
              "fastapi"
            ],
            "created_at": "2025-07-10T07:27:40.613083",
            "updated_at": "2025-07-10T07:27:40.613083",
            "importance": 5,
            "expires_at": null
          }
        ],
        "total_found": 1,
        "search_params": {
          "query": "mcp",
          "context": "machina_project",
          "tags": null,
          "min_importance": null,
          "limit": 50
        }
      },
      "result_type": "dict",
      "execution_time": 8e-05,
      "timestamp": "2025-07-10T02:27:40.619292"
    },
    {
      "tool_name": "update_memory",
      "success": true,
      "arguments": {
        "memory_id": "machina_id_1",
        "content": "Updated Machina project with enhanced MCP registry capabilities",
        "tags": [
          "updated",
          "machina",
          "enhanced"
        ]
      },
      "result": {
        "error": "Memory with ID 'machina_id_1' not found"
      },
      "result_type": "dict",
      "execution_time": 2.4e-05,
      "timestamp": "2025-07-10T02:27:40.620176"
    },
    {
      "tool_name": "delete_memory",
      "success": true,
      "arguments": {
        "memory_id": "machina_id_to_delete"
      },
      "result": {
        "error": "Memory with ID 'machina_id_to_delete' not found"
      },
      "result_type": "dict",
      "execution_time": 1.7e-05,
      "timestamp": "2025-07-10T02:27:40.620885"
    },
    {
      "tool_name": "list_contexts",
      "success": true,
      "arguments": {},
      "result": {
        "contexts": [
          {
            "context": "test_context_1",
            "memory_count": 2
          },
          {
            "context": "test_context_2",
            "memory_count": 2
          },
          {
            "context": "machina_architecture",
            "memory_count": 1
          },
          {
            "context": "machina_project",
            "memory_count": 1
          },
          {
            "context": "test_context",
            "memory_count": 1
          }
        ],
        "total_contexts": 5
      },
      "result_type": "dict",
      "execution_time": 2.6e-05,
      "timestamp": "2025-07-10T02:27:40.621568"
    },
    {
      "tool_name": "get_memory_stats",
      "success": true,
      "arguments": {},
      "result": {
        "total_memories": 7,
        "max_capacity": 10000,
        "capacity_used_percent": 0.07,
        "recent_24h": 7,
        "expiring_soon_24h": 0,
        "importance_distribution": {
          "8": 3,
          "5": 4
        },
        "database_path": "memory.db"
      },
      "result_type": "dict",
      "execution_time": 9e-05,
      "timestamp": "2025-07-10T02:27:40.622334"
    },
    {
      "tool_name": "export_memories",
      "success": true,
      "arguments": {},
      "result": {
        "status": "exported",
        "export_data": {
          "export_timestamp": "2025-07-10T07:27:40.622915",
          "total_memories": 7,
          "filters": {
            "context": null,
            "min_importance": null
          },
          "memories": [
            {
              "memory_id": "a29ec6ae2ea686c77ee7a10c2a512612",
              "content": "The Machina project includes multiple MCP servers for memory, logfire, pytest, github, docker, and registry management",
              "context": "machina_architecture",
              "tags": [
                "machina",
                "mcp-servers",
                "comprehensive"
              ],
              "created_at": "2025-07-10T07:27:40.615974",
              "updated_at": "2025-07-10T07:27:40.615974",
              "importance": 8,
              "expires_at": null
            },
            {
              "memory_id": "10840f467a424760cb267ebc537dc275",
              "content": "Test memory content 2 with longer text that includes various details",
              "context": "test_context_2",
              "tags": [
                "test",
                "comprehensive"
              ],
              "created_at": "2025-07-10T07:20:56.485809",
              "updated_at": "2025-07-10T07:20:56.485809",
              "importance": 8,
              "expires_at": null
            },
            {
              "memory_id": "cec284a13e99491367c473a2c358c353",
              "content": "Test memory content 2 with longer text that includes various details",
              "context": "test_context_2",
              "tags": [
                "test",
                "comprehensive"
              ],
              "created_at": "2025-07-10T07:19:29.181206",
              "updated_at": "2025-07-10T07:19:29.181206",
              "importance": 8,
              "expires_at": null
            },
            {
              "memory_id": "d96bc3d83d5daa4e0365425458501650",
              "content": "Machina is a comprehensive MCP registry platform built with FastAPI and FastMCP framework",
              "context": "machina_project",
              "tags": [
                "machina",
                "mcp",
                "registry",
                "fastapi"
              ],
              "created_at": "2025-07-10T07:27:40.613083",
              "updated_at": "2025-07-10T07:27:40.613083",
              "importance": 5,
              "expires_at": null
            },
            {
              "memory_id": "a0a29a4d065c0808b907556f473be77c",
              "content": "Test memory content 1",
              "context": "test_context_1",
              "tags": [
                "test",
                "memory",
                "example"
              ],
              "created_at": "2025-07-10T07:20:56.483380",
              "updated_at": "2025-07-10T07:20:56.483380",
              "importance": 5,
              "expires_at": null
            },
            {
              "memory_id": "02c19da0c2c148bd4637e41d12747124",
              "content": "Test memory content 1",
              "context": "test_context_1",
              "tags": [
                "test",
                "memory",
                "example"
              ],
              "created_at": "2025-07-10T07:19:29.179292",
              "updated_at": "2025-07-10T07:19:29.179292",
              "importance": 5,
              "expires_at": null
            },
            {
              "memory_id": "6e01aa13931f8a02e5c7eb67686036e9",
              "content": "test_content",
              "context": "test_context",
              "tags": [
                "test"
              ],
              "created_at": "2025-07-10T06:53:39.353216",
              "updated_at": "2025-07-10T06:53:39.353216",
              "importance": 5,
              "expires_at": null
            }
          ]
        }
      },
      "result_type": "dict",
      "execution_time": 6.1e-05,
      "timestamp": "2025-07-10T02:27:40.623076"
    },
    {
      "tool_name": "export_memories",
      "success": true,
      "arguments": {
        "context": "machina_project"
      },
      "result": {
        "status": "exported",
        "export_data": {
          "export_timestamp": "2025-07-10T07:27:40.623618",
          "total_memories": 1,
          "filters": {
            "context": "machina_project",
            "min_importance": null
          },
          "memories": [
            {
              "memory_id": "d96bc3d83d5daa4e0365425458501650",
              "content": "Machina is a comprehensive MCP registry platform built with FastAPI and FastMCP framework",
              "context": "machina_project",
              "tags": [
                "machina",
                "mcp",
                "registry",
                "fastapi"
              ],
              "created_at": "2025-07-10T07:27:40.613083",
              "updated_at": "2025-07-10T07:27:40.613083",
              "importance": 5,
              "expires_at": null
            }
          ]
        }
      },
      "result_type": "dict",
      "execution_time": 3.5e-05,
      "timestamp": "2025-07-10T02:27:40.623784"
    }
  ],
  "verification_statement": "All results are from REAL MCP tool calls with authentic responses. NO FAKE DATA."
}